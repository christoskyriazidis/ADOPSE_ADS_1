<Application x:Class="WpfClientt.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:WpfClientt"
             xmlns:models="clr-namespace:WpfClientt.model"
             xmlns:viewmodels="clr-namespace:WpfClientt.viewModels"
             xmlns:views="clr-namespace:WpfClientt.views"
             xmlns:viewsFilter="clr-namespace:WpfClientt.views.filters"
             xmlns:notifications="clr-namespace:WpfClientt.views.notifications"
             xmlns:viewsMenu="clr-namespace:WpfClientt.views.menus">
    <Application.Resources>
        
        <!--COLORS-->
        <SolidColorBrush x:Key="blue-light" Color="#99C2EC" />

        <SolidColorBrush x:Key="blue-medium" Color="#3385D9" />

        <SolidColorBrush x:Key="blue-dark" Color="#1B6DC1" />

        <SolidColorBrush x:Key="red-light" Color="#dc3545" />

        <SolidColorBrush x:Key="red-medium" Color="#ff2535" />

        <SolidColorBrush x:Key="red-dark" Color="#CC0000" />

        <SolidColorBrush x:Key="green-light" Color="#00C851" />

        <SolidColorBrush x:Key="green-medium" Color="#00af4a" />

        <SolidColorBrush x:Key="green-dark" Color="#007E33"/>
        
        <!-- STYLES -->

        <Style x:Key="medium_green_button" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="{StaticResource green-medium}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="#fff" />
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{StaticResource green-light}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="medium_blue_button" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="{StaticResource blue-medium}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="#fff" />
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{StaticResource blue-light}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="medium_red_button" TargetType="Button">
            <Style.Setters>
                <Setter Property="Background" Value="{StaticResource red-medium}" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="#fff" />
            </Style.Setters>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Background" Value="{StaticResource red-light}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style  x:Key="centerRightAlignment" TargetType="FrameworkElement">
            <Style.Setters>
                <Setter Property="VerticalAlignment"  Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
            </Style.Setters>
        </Style>

        <Style  x:Key="centerAlignment" TargetType="FrameworkElement">
            <Style.Setters>
                <Setter Property="VerticalAlignment"  Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
            </Style.Setters>
        </Style>

        <!--Data temapltes-->
        <DataTemplate DataType="{x:Type models:Chat}">
            <views:ChatBoxView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:ChatViewModel}">
            <views:ChatView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:NotificationsViewModel}">
            <notifications:NotificationsView />
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type viewmodels:ChatRequestNotificationViewModel}">
            <notifications:ChatRequestNotificationView />
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type viewmodels:RegisterViewModel}">
            <views:RegisterView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:LoginViewModel}">
            <views:LoginView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:CategoriesViewModel}">
            <views:CategoriesView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:SubcategoriesViewModel}">
            <views:SubcategoriesView />
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type viewmodels:AdsViewModel}">
            <views:AdsView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:AdDetailsViewModel}">
            <views:AdsDetailView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:DisplayTextViewModel}">
            <views:DisplayTextView/>
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:CreateAdViewModel}">
            <views:CreateAdView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:ProfileViewModel}">
            <views:ProfileSettings />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:ChatsViewModel}">
            <views:ChatsView />
        </DataTemplate>
        
        <DataTemplate DataType="{x:Type viewmodels:GuestMenu}">
            <viewsMenu:GuestMenu />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:LoginCustomerMenu}">
            <viewsMenu:LoginCustomerMenu />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:FilterViewModel}">
            <viewsFilter:FilterView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:MultipleChoicesFilterMember}" >
            <viewsFilter:MultipleChoicesFilterMemberView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:SingleChoiceFilterMember}">
            <viewsFilter:SingleChoiceFilterMemberView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:MinMaxPriceFilterMember}">
            <viewsFilter:RangeFilterMemberView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type viewmodels:SearchFilterMember}">
            <viewsFilter:SearchFilterMemberView />
        </DataTemplate>

        <DataTemplate DataType="{x:Type models:Message}">
            <views:MessageView />
        </DataTemplate>

        <!-- Converters -->
        <viewmodels:StringToIntConverter x:Key="IntConverter" />
        <viewmodels:ReverseBooleanVaueConverter x:Key="ReverseBooleanVaueConverter" />

    </Application.Resources>
</Application>
